# Please do not edit this file.
# More information under https://docs.ionos.space/docs/github-actions-customization/
# version: 2022-07-21


      

     
     name: "Deploy Now: Deploy to IONOS"

on:
  workflow_dispatch:
    inputs:
      version:
        required: true
        type: string
      project-id:
        required: true
        type: string
      branch-id:
        required: true
        type: string
      deployment-ids:
        required: true
        type: string
  push:
    paths:
      - ./.github/workflows/deploy-to-ionos.yaml

concurrency: ${{ github.ref }}

jobs:
  build-and-upload:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          tools: composer

      - name: Install dependencies
        run: composer install --no-dev --optimize-autoloader

      - name: Dump optimized Composer autoload
        run: composer dump-autoload -o

      - name: Upload deployment artifact
        uses: actions/upload-artifact@v3
        with:
          name: deployment
          path: .

  deploy-to-ionos:
    needs: build-and-upload
    if: ${{ github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-latest
    permissions:
      actions: read
    strategy:
      matrix:
        deployment-id: ${{ fromJson(inputs.deployment-ids) }}
    steps:
      - name: Download built artifact
        uses: actions/download-artifact@v3
        with:
          name: deployment
          path: deployment

      - name: Fetch deployment info
        uses: ionos-deploy-now/project-action@v1
        id: deployment
        with:
          api-key: ${{ secrets.IONOS_API_KEY }}
          service-host: api-eu.ionos.space
          project-id: ${{ inputs.project-id }}
          branch-id: ${{ inputs.branch-id }}
          deployment-id: ${{ matrix.deployment-id }}
          action: retrieve-info

      - name: Render templates
        uses: ionos-deploy-now/template-renderer-action@v2
        id: template
        with:
          deployment-id: ${{ matrix.deployment-id }}
          data: "[${{ steps.deployment.outputs.template-variables }}, ${{ toJson(secrets) }}]"
          input-directory: deployment
          output-directory: deployment
          intermediate-data-file: deployment/.template-renderer-data

      - name: Render real site-url to all files
        run: |
          for file in `grep -rl 'https://IONOS_DEPLOY_NOW_SITE_URL' .`; do
            sed -i $file -e 's|https://IONOS_DEPLOY_NOW_SITE_URL|${{ fromJson(steps.deployment.outputs.info).site-url }}|g'
          done

      - name: Render SSH user secret name
        run: echo SSH_USERNAME_SECRET=IONOS_DEPLOYMENT_`echo ${{ matrix.deployment-id }} | tr '[:lower:]' '[:upper:]' | tr '-' '_'`_SSH_USERNAME >> $GITHUB_ENV

      - name: Deploy to IONOS
        uses: ionos-deploy-now/deploy-to-ionos-action@v2
        with:
          api-key: ${{ secrets.IONOS_API_KEY }}
          service-host: api-eu.ionos.space
          project-id: ${{ inputs.project-id }}
          branch-id: ${{ inputs.branch-id }}
          deployment-id: ${{ matrix.deployment-id }}
          deployment-info: ${{ steps.deployment.outputs.info }}
          ssh-user: ${{ secrets[env.SSH_USERNAME_SECRET] || secrets.IONOS_SSH_USER }}
          ssh-key: ${{ secrets.IONOS_SSH_KEY }}

      - name: Update deployment status
        if: ${{ always() }}
        uses: ionos-deploy-now/project-action@v1
        with:
          api-key: ${{ secrets.IONOS_API_KEY }}
          service-host: api-eu.ionos.space
          project-id: ${{ inputs.project-id }}
          branch-id: ${{ inputs.branch-id }}
          deployment-id: ${{ matrix.deployment-id }}
          action: update-status
          status: ${{ job.status }}

  notify-deployment-finished:
    needs: deploy-to-ionos
    if: ${{ github.event_name == 'workflow_dispatch' && always() }}
    runs-on: ubuntu-latest
    steps:
      - name: Notify all deployments finished
        uses: ionos-deploy-now/project-action@v1
        with:
          api-key: ${{ secrets.IONOS_API_KEY }}
          service-host: api-eu.ionos.space
          project-id: ${{ inputs.project-id }}
          branch-id: ${{ inputs.branch-id }}
          action: set-deployments-finished
